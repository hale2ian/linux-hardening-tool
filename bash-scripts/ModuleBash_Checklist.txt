# Filename: ModuleBash_Checklist
# Title: linux-hardening-tool module/bash script checklist
# Author: Jean Ian Panganiban
# Date: 20250630
# Description: This contains checklists for manual verification of the bash scripts located in $HOME/linux-hardening-tool

# For SSH module
# [ ] Check logs. It should show that the hardening started and completed.
sudo cat ~/linux-hardening-tool/logs/ssh_hardening_<timestamp>.log
# [ ] Check SSH service. It should show "active/running".
sudo systemctl status ssh
# [ ] Check sshd_config backup file. It should show a file starting with "sshd_config.bak"
sudo ls -lh /etc/ssh/sshd_config.bak.*
# [ ] Check SSH port. It should show it is listening on "2222".
sudo ss -tulpn | head -1 ; sudo ss -tulpn | grep ssh
# [ ] Check sshd_config settings. It should show: "Port 2222", "PermitRootLogin no", "PasswordAuthentication no".
sudo grep -E "^Port|^PermitRootLogin|^PasswordAuthentication" /etc/ssh/sshd_config
# [ ] Check local firewall rules. It should show port 2222 is allowed.
sudo ufw status || sudo firewall-cmd --list-all
# [ ] Check SSH connectivity. Connect via SSH to the server if successful.
ssh -p 2222 admin@localhost
# [ ] Check remote root login. It should show "permission denied"

# For firewall module
# [ ] Check logs. It should show that the hardening started and completed.
sudo cat ~/linux-hardening-tool/logs/firewall_hardening_<timestamp>.log
# [ ] Check which firewall tool used. 
if command -v ufw;
	then echo "Using UFW";
elif command -v firewall-cmd;
	then echo "Using firewalld";
elif command -v iptables;
	then echo "Using iptables";
else
	echo "No supported firewall found."
fi
# [ ] Check firewall status and rules. It should show status is active and the rules.
sudo ufw status verbose
sudo firewall-cmd --list-all
sudo iptables -L -n -v

# For service cleanup module
# [ ] Check logs. It should show that the hardening started and completed.
sudo cat ~/linux-hardening-tool/logs/service_cleanup_<timestamp>.log
# [ ] Check list of enabled services
systemctl list-unit-files --state=enabled
# [ ] Check status of the disabled services
sudo systemctl status telnet
sudo systemctl status ftp
sudo systemctl status rsh
sudo systemctl status rlogin
sudo systemctl status rexec
sudo systemctl status tftp
sudo systemctl status nfs-server
sudo systemctl status rpcbind
sudo systemctl status cups
sudo systemctl status avahi-daemon
# [ ] Check if disabled services can be enabled again
sudo systemctl start telnet

# For file permissions module
# [ ] Check logs. It should show that the hardening started and completed.
sudo cat ~/linux-hardening-tool/logs/file_permissions_<timestamp>.log
# [ ] Check the permissions and ownerships of the files.
sudo ls -l /etc/passwd /etc/shadow /etc/group /etc/gshadow
sudo ls -l /etc/ssh/sshd_config
sudo ls -ld /etc/ssh
sudo ls -l /etc/ssh/ssh_host_*
sudo ls -l /boot/grub2/grub.cfg /boot/grub/grub.cfg
sudo ls -ld /root /root/.ssh
sudo ls -l /root/.ssh/authorized_keys
sudo ls -l /etc/crontab
sudo ls -ld /etc/cron.*
sudo ls -l /etc/sudoers
sudo ls -ld /etc/sudoers.d
sudo ls -l /etc/sudoers.d/*
sudo ls -l /etc/fstab
sudo ls -ld /etc/pam.d
sudo ls -l /etc/pam.d/*
sudo ls -ld /var/log
sudo ls -l /var/log/auth.log /var/log/secure

# For kernel hardening module
# [ ] Check if the backup file is created:
$HOME/linux-hardening-tool/logs/sysctl_backup_<timestamp>.txt
# [ ] Check the running kernel parameters
sudo sysctl -a | grep -E "tcp_syncookies|rp_filter|accept_source_route|accept_redirects|secure_redirects|icmp_echo_ignore_broadcasts|icmp_ignore_bogus_error_responses|log_martians|send_redirects|bpf_jit_harden|kptr_restrict|ldisc_autoload|protected_fifos|protected_hardlinks|protected_regular|protected_symlinks|suid_dumpable|sysrq|unprivileged_bpf_disabled|core_uses_pid|ctrl-alt-del|dmesg_restrict|randomize_va_space|perf_event_paranoid"
	# It should show the following:
	net.ipv4.tcp_syncookies = 1
	net.ipv4.conf.all.rp_filter = 1
	net.ipv4.conf.default.rp_filter = 1
	net.ipv4.conf.all.accept_source_route = 0
	net.ipv4.conf.default.accept_source_route = 0
	net.ipv4.conf.all.accept_redirects = 0
	net.ipv4.conf.default.accept_redirects = 0
	net.ipv4.conf.all.secure_redirects = 0
	net.ipv4.conf.default.secure_redirects = 0
	net.ipv4.icmp_echo_ignore_broadcasts = 1
	net.ipv4.icmp_ignore_bogus_error_responses = 1
	net.ipv4.conf.all.log_martians = 1
	net.ipv4.conf.default.log_martians = 1
	net.ipv4.conf.all.send_redirects = 0
	net.ipv4.conf.default.send_redirects = 0
	net.core.bpf_jit_harden = 2
	kernel.kptr_restrict = 2
	dev.tty.ldisc_autoload = 0
	fs.protected_fifos = 2
	fs.protected_hardlinks = 1
	fs.protected_regular = 2
	fs.protected_symlinks = 1
	fs.suid_dumpable = 0
	kernel.sysrq = 0
	kernel.unprivileged_bpf_disabled = 1
	kernel.core_uses_pid = 1
	kernel.ctrl-alt-del = 0
	kernel.dmesg_restrict = 1
	kernel.randomize_va_space = 2
	kernel.perf_event_paranoid = 2
# [ ] Verify if the file below is created:
/etc/sysctl.d/99-hardening.conf
	# It should show the following:
	# Kernel Hardening Parameters by linux-hardening-tool
	
	# Enable SYN cookies
	net.ipv4.tcp_syncookies = 1
	
	# Enable reverse path filtering
	net.ipv4.conf.all.rp_filter = 1
	net.ipv4.conf.default.rp_filter = 1
	
	# Disable IP source routing
	net.ipv4.conf.all.accept_source_route = 0
	net.ipv4.conf.default.accept_source_route = 0
	
	# Disable ICMP redirects
	net.ipv4.conf.all.accept_redirects = 0
	net.ipv4.conf.default.accept_redirects = 0
	net.ipv4.conf.all.secure_redirects = 0
	net.ipv4.conf.default.secure_redirects = 0
	
	# Ignore ICMP broadcasts and bogus error responses
	net.ipv4.icmp_echo_ignore_broadcasts = 1
	net.ipv4.icmp_ignore_bogus_error_responses = 1
	
	# Log suspicious packets
	net.ipv4.conf.all.log_martians = 1
	net.ipv4.conf.default.log_martians = 1
	
	# Disable sending ICMP redirects
	net.ipv4.conf.all.send_redirects = 0
	net.ipv4.conf.default.send_redirects = 0
	
	# Harden BPF JIT
	net.core.bpf_jit_harden = 2
	
	# Restrict kernel pointers
	kernel.kptr_restrict = 2
	
	# Disable loading TTY line discipline modules automatically
	dev.tty.ldisc_autoload = 0
	
	# Enable protection of FIFOs and regular files
	fs.protected_fifos = 2
	fs.protected_hardlinks = 1
	fs.protected_regular = 2
	fs.protected_symlinks = 1
	
	# Disable dumping of suid processes
	fs.suid_dumpable = 0
	
	# Disable SysRq
	kernel.sysrq = 0
	
	# Restrict unprivileged BPF
	kernel.unprivileged_bpf_disabled = 1
	
	# Kernel core uses PID for coredumps
	kernel.core_uses_pid = 1
	
	# Disable Ctrl-Alt-Del reboot
	kernel.ctrl-alt-del = 0
	
	# Restrict dmesg
	kernel.dmesg_restrict = 1
	
	# Enable address space layout randomization
	kernel.randomize_va_space = 2
	
	# Harden perf_event
	kernel.perf_event_paranoid = 2
	
	# Note: kernel.modules_disabled = 1 is not applied to preserve functionality

# For auditd module